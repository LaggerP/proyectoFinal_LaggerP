{"version":3,"sources":["images/welcomeVideo.mp4","config/Fire.js","components/posts/FormPost.jsx","components/posts/Post.jsx","components/posts/AllPost.jsx","components/Home.jsx","components/Login.jsx","App.js","reducer/postReducer.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","URL_API","process","PostForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangePublishedPost","bind","assertThisInitialized","onSubmit","state","published_post","e","setState","target","value","preventDefault","console","log","concat","obj","axios","post","then","res","data","react_default","a","createElement","className","class","rows","id","placeholder","onChange","onClick","type","Component","Post","delete","get","_id","catch","err","AllPost","posts","_this2","response","error","map","object","i","posts_Post","key","PostPublicados","Home","logout","email","auth","signOut","src","alt","FormPost_PostForm","AllPost_AllPost","Welcome","signup","login","handleChange","password","signInWithEmailAndPassword","u","createUserWithEmailAndPassword","defineProperty","name","loop","autoplay","muted","videoWelcome","for","aria-describedby","style","marginLeft","App","user","authListener","onAuthStateChanged","components_Home","Login","postReducer","arguments","length","undefined","action","comment","filter","Boolean","window","location","hostname","match","store","createStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f5183677.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/welcomeVideo.36e85289.mp4\";","\nimport firebase from 'firebase';\n\n  const config = {\n    apiKey: \"AIzaSyBCJ6jRgzm3Q2Y_lzrJHn9iFyC7v6P93Vo\",\n    authDomain: \"proyecto-final-coderhouse-lp.firebaseapp.com\",\n    databaseURL: \"https://proyecto-final-coderhouse-lp.firebaseio.com\",\n    projectId: \"proyecto-final-coderhouse-lp\",\n    storageBucket: \"proyecto-final-coderhouse-lp.appspot.com\",\n    messagingSenderId: \"417955324929\"\n  };\n\n  const fire = firebase.initializeApp(config);\n  export default fire;\n  \n","import React, { Component } from 'react';\nimport '../../styles/FormPost.css'\nimport axios from 'axios';\n\nconst URL_API = process.env.URL_API;\n\nexport default class PostForm extends Component{\n  constructor(props) {\n    super(props);\n    this.onChangePublishedPost = this.onChangePublishedPost.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      published_post: '',\n    }\n  }\n\n  onChangePublishedPost(e){\n    this.setState({\n      published_post: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    console.log(`El post a publicar es: ${this.state.published_post}`);\n    const obj = {\n      published_post: this.state.published_post,\n    };\n    axios.post(`${URL_API}/apiPost/add`, obj).then(res => console.log(res.data));\n    this.setState({\n      published_post: '',\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"FormPost\">\n        <form>\n          <div class=\"form-group\">\n            <h4>Publique su mensaje</h4>\n            <textarea \n              className=\"form-control\" \n              rows=\"5\" \n              id=\"comment\" \n              placeholder=\"Escriba su texto aqui\"\n              value={this.state.published_post}\n              onChange={this.onChangePublishedPost}\n            ></textarea>\n\n            <br/>\n            <button onClick={this.onSubmit} type=\"button\" className=\"btn btn-info btn-block\">Publicar</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\n","import React, { Component } from 'react';\nimport '../../styles/Post.css'\nimport axios from 'axios'\n\nconst URL_API = process.env.URL_API;\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.delete = this.delete.bind(this);\n  }\n\n  delete() {\n    axios.get(`${URL_API}/apiPost/delete/`+ this.props.obj._id)\n      .then(console.log('Deleted'))\n      .catch(err => console.log(err))\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"onePost\">\n          <p>{this.props.obj.published_post}</p>\n          <button onClick={this.delete} className=\"btn btn-sm btn-danger\">Delete</button>\n        </div>\n        <hr />\n      </div>\n    );\n  }\n}\n\nexport default Post;","import React, { Component } from 'react';\nimport axios from 'axios'\nimport Post from './Post'\n\nconst URL_API = process.env.URL_API;\n\nexport default class AllPost extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { posts: [] };\n    }\n\n\n    componentDidMount() {\n        axios.get(`${URL_API}/apiPost`)\n            .then(response => {\n                this.setState({ posts: response.data });\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n    PostPublicados() {\n        return this.state.posts.map(function (object, i) {\n            return <Post obj={object} key={i} />;\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h4>Últimos posteos</h4>\n                <hr />\n                {this.PostPublicados()}\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport fire from '../config/Fire';\nimport '../styles/Home.css'\nimport FormPost from './posts/FormPost'\nimport AllPost from './posts/AllPost'\n\nclass Home extends Component {\n    constructor(props){\n        super(props);\n        this.logout = this.logout.bind(this);\n        this.state = {\n          email: null,\n        }\n    }\n\n    logout() {\n      fire.auth().signOut();\n    }\n\n  render() {\n    return (\n      <div className=\"Home\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-sm-4\">\n              <div className=\"Home_profile\">\n                <div class=\"card\">\n                    <img class=\"card-img-top\" src=\"\" alt=\"Card img cap\"/>\n                    <div class=\"card-body\">\n                      <h5 class=\"card-title\">Nombre obtenido de la BD</h5>\n                      <p class=\"card-text\">Biografia obtenida de la BD</p>\n                    </div>\n                    <ul class=\"list-group list-group-flush\">\n                      <li class=\"list-group-item\">Cras justo odio</li>\n                      <li class=\"list-group-item\">Dapibus ac facilisis in</li>\n                      <li class=\"list-group-item\">Vestibulum at eros</li>\n                    </ul>\n                    <button onClick={this.logout} type=\"button\" class=\"btn btn-light\" id=\"botonSalir\">Cerrar sesión</button>\n                </div>\n                \n              </div>\n            </div>\n            <div className=\"col-sm-7\">\n            <div className=\"Home_infoPost\">\n              <FormPost/>\n            </div>\n            <div className=\"Home_infoFromServer\">\n              <AllPost/>\n            </div>\n            </div>\n          </div>\n        </div>\n        \n        \n\t\t\t</div>\n\n\n\n\n\n\t\t\n    )\n  };\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport '../styles/Welcome.css'\nimport videoWelcome from '../images/welcomeVideo.mp4'\nimport fire from '../config/Fire';\n\nclass Welcome extends Component {\n  constructor(props){\n    super(props);\n    this.signup = this.signup.bind(this);\n    this.login = this.login.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      email:'',\n      password:'',\n      \n    }\n  }\n\n  login(e) {\n    e.preventDefault();\n    fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then((u)=>{\n    }).catch((error) => {\n        console.log(error);\n      });\n  }\n\nsignup(e){\n  e.preventDefault();\n  fire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then((u)=>{\n  }).then((u)=>{console.log(u)})\n  .catch((error) => {\n      console.log(error);\n    })\n}\n\nhandleChange(e) {\n  this.setState({ [e.target.name]: e.target.value });\n}\n\n  render() {\n    return (\n        <div className=\"Welcome\">\n          <div className=\"Welcome_Left\">\n            <video loop autoplay='' muted id=\"videoWelcome\">\n              <source src={videoWelcome} type=\"video/mp4\" />\n            </video>\n          </div>\n          <div className=\"Welcome_Right\">\n            \n            <div className=\"Welcome_Right--Form\">\n            \n              <h1>¡Coder web!</h1>\n              <form>\n                <div class=\"form-group\">\n                  <label for=\"exampleInputEmail1\">Email address</label>\n                  <input value={this.state.email} onChange={this.handleChange} type=\"email\" name=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Ingrese email\" />\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"exampleInputPassword1\">Password</label>\n                  <input value={this.state.password} onChange={this.handleChange} type=\"password\" name=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Ingrese su contraseña\" />\n                </div>\n                <button type=\"submit\" onClick={this.login} class=\"btn btn-primary\">Iniciar sesión</button>\n                <button onClick={this.signup} style={{marginLeft: '25px'}} className=\"btn btn-success\">Crear cuenta</button>\n              </form>\n              </div>\n            </div>\n        </div>\n      );\n    }\n  }\n        \nexport default Welcome;\n","import React, { Component } from 'react';\nimport './App.css';\nimport fire from './config/Fire';\nimport Home from './components/Home';\nimport Login from './components/Login';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = ({\n      user: null,\n    });\n    //this.authListener = this.authListener.bind(this);\n  }\n\n  componentDidMount() {\n    this.authListener();\n  }\n\n  authListener() {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ user });\n        console.log('if', user);\n      } else {\n        this.setState({ user: null });\n        console.log('else', user)\n      }\n    });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.user ? (<Home />) : (<Login />)}\n      </div>\n    )\n  };\n}\n\nexport default App;\n","const postReducer = (state = [], action) => {\n    switch(action.type) {\n        case 'ADD_POST':\n          return state.concat([action.comment]);\n        case 'DELETE_POST':\n          return state.filter((post)=>post.id !== action.id);\n        default:\n          break\n      }\n      return state;\n}\nexport default postReducer;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css'\nimport './index.css';\nimport App from './App';\n\n//redux\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport postReducer from './reducer/postReducer';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(postReducer);\n\nReactDOM.render(<Provider store={store}>\n                    <App />\n                </Provider>, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}